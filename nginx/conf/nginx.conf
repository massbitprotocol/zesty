# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#
load_module /usr/local/openresty/nginx/modules/extensions/ngx_http_link_func_module.so;
#
# Setup maxmind db for geoip module
#load_module /usr/local/openresty/nginx/extensions/modules/ngx_http_geoip2_module.so;
#load_module /usr/local/openresty/nginx/extensions/modules/ngx_stream_geoip2_module.so;
load_module /usr/local/openresty/nginx/modules/extensions/ngx_http_vhost_traffic_status_module.so;
load_module /usr/local/openresty/nginx/modules/extensions/ngx_http_stream_server_traffic_status_module.so;
load_module /usr/local/openresty/nginx/modules/extensions/ngx_stream_server_traffic_status_module.so;

load_module /usr/local/openresty/nginx/modules/extensions/ngx_http_zesty_module.so;
user root;
worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;
 
error_log  logs/debug.log  debug;
error_log  logs/error.log;
#error_log  logs/notice.log  notice;
#error_log  logs/info.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 128;
    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    log_format main_json escape=json '{'
        '"msec": "$msec", '
        '"connection": "$connection", '
        '"connection_requests": "$connection_requests", '
        '"pid": "$pid", '
        '"request_id": "$request_id", '
        '"request_length": "$request_length", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"remote_port": "$remote_port", '
        '"time_local": "$time_local", '
        '"time_iso8601": "$time_iso8601", '
        '"request": "$request", '
        '"request_uri": "$request_uri", '
        '"args": "$args", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"bytes_sent": "$bytes_sent", '
        '"http_referer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"http_host": "$http_host", '
        '"server_name": "$server_name", '
        '"request_time": "$request_time", '
        '"upstream": "$upstream_addr", '
        '"upstream_connect_time": "$upstream_connect_time", '
        '"upstream_header_time": "$upstream_header_time", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_response_length": "$upstream_response_length", '
        '"upstream_cache_status": "$upstream_cache_status", '
        '"ssl_protocol": "$ssl_protocol", '
        '"ssl_cipher": "$ssl_cipher", '
        '"scheme": "$scheme", '
        '"request_method": "$request_method", '
        '"server_protocol": "$server_protocol", '
        '"pipe": "$pipe", '
        '"gzip_ratio": "$gzip_ratio", '
        '"request_body": "$request_body", '
        '"response_body": "$resp_body", '
        '"http_cf_ray": "$http_cf_ray", '
        '"real_ip": "$http_x_forwarded_for",'
        '"tcpinfo_rtt": "$tcpinfo_rtt",'
        '"tcpinfo_rttvar": "$tcpinfo_rttvar"'
    '}';

        # Log in JSON Format
        # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
        # '"remote_addr": "$remote_addr", '
        #  '"body_bytes_sent": $body_bytes_sent, '
        #  '"request_time": $request_time, '
        #  '"response_status": $status, '
        #  '"request": "$request", '
        #  '"request_method": "$request_method", '
        #  '"host": "$host",'
        #  '"upstream_addr": "$upstream_addr",'
        #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
        #  '"http_referrer": "$http_referer", '
        #  '"http_user_agent": "$http_user_agent", '
        #  '"http_version": "$server_protocol", '
        #  '"nginx_access": true }';
        # access_log /dev/stdout nginxlog_json;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;
    fastcgi_buffers 8 8m;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #lua_package_path '/usr/local/openresty/scripts/?.lua;'

    #lua
    lua_capture_error_log 32m;
    lua_need_request_body on;
    lua_regex_match_limit 1500;
    lua_check_client_abort on;
    lua_socket_log_errors off;
    #lua_shared_dict _GBC_ 1024k;
    lua_code_cache on;
    lua_shared_dict _GW_ 128k;
    lua_shared_dict upstreams 10m;
    lua_shared_dict accessKeys 10m;
    lua_shared_dict vts_snapshot 32m;
    #include /etc/nginx/conf.d/*.conf;
    vhost_traffic_status_zone shared:vhost_traffic_status:32m;
    #vhost_traffic_status_dump /usr/local/openresty/nginx/data/vts_gw.db;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    map $host $resp_body {
        default '';
    }
    proxy_cache_path /usr/local/openresty/nginx/cache_gateway levels=1:2 keys_zone=cache_gateway:100m inactive=24h max_size=1g;
    include /usr/local/openresty/nginx/conf/extensions/include/*.conf;

    # Don't reveal OpenResty version to clients.
    # server_tokens off;
}